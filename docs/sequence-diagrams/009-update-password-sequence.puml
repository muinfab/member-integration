@startuml 009-update-password-sequence
!theme plain
title 비밀번호 변경 API 시퀀스 다이어그램 (IDMI-REWARDS-009)

actor Client as "클라이언트"
participant Controller as "MembershipController"
participant Service as "MembershipService"
participant Repository as "MemberRepository"
database Database as "Database"

== 비밀번호 변경 요청 ==

Client -> Controller: PUT /v1/membership/integration/update/pw
activate Controller

note right of Client: memberType: U\nloginId: axlrose\noldLoginPw: test1234\nnewLoginPw: test4321

Controller -> Controller: 요청 파라미터 검증
note right: - memberType (필수)\n- loginId (필수)\n- oldLoginPw (필수)\n- newLoginPw (필수)\n- 비밀번호 형식 검증

Controller -> Service: updatePassword(updatePasswordRequest)
activate Service

Service -> Service: 회원 정보 조회
Service -> Repository: findByMemberTypeAndLoginId(memberType, loginId)
activate Repository
Repository -> Database: SELECT * FROM members\nWHERE member_type = ?\nAND (membership_id = ? OR web_member_id = ?)
Database --> Repository: 회원 정보
Repository --> Service: Member existingMember
deactivate Repository

alt 회원 정보 없음
    Service --> Controller: ErrorResponse(회원 정보 없음)
    Controller --> Client: HTTP 404\n회원 정보 없음
    deactivate Controller
    deactivate Service
end

Service -> Service: 기존 비밀번호 검증
Service -> Service: BCrypt.matches(oldLoginPw, existingMember.getPassword())
note right: BCrypt를 사용한\n비밀번호 해시 검증

alt 기존 비밀번호 불일치
    Service --> Controller: ErrorResponse(기존 비밀번호 불일치)
    Controller --> Client: HTTP 400\n기존 비밀번호 오류
    deactivate Controller
    deactivate Service
end

Service -> Service: 새 비밀번호 유효성 검증
note right: - 비밀번호 정책 검증\n- 기존 비밀번호와 동일 여부 체크\n- 최소 길이, 특수문자 등 검증

alt 새 비밀번호 유효성 검증 실패
    Service --> Controller: ErrorResponse(새 비밀번호 정책 위반)
    Controller --> Client: HTTP 400\n비밀번호 정책 오류
    deactivate Controller
    deactivate Service
end

Service -> Service: 새 비밀번호 암호화
Service -> Service: BCrypt.hashpw(newLoginPw, BCrypt.gensalt())
note right: BCrypt로 새 비밀번호\n해시 암호화

Service -> Service: 비밀번호 변경 처리
Service -> Repository: updatePassword(membershipUserInfoId, hashedPassword)
activate Repository
Repository -> Database: UPDATE members\nSET member_password = ?,\nupdate_date = NOW()\nWHERE id = ?
Database --> Repository: 업데이트 결과
Repository --> Service: boolean updateResult
deactivate Repository

alt 비밀번호 업데이트 실패
    Service --> Controller: ErrorResponse(비밀번호 변경 실패)
    Controller --> Client: HTTP 500\n비밀번호 변경 실패
    deactivate Controller
    deactivate Service
end

Service -> Service: 비밀번호 변경 완료 처리
note right: - 변경 이력 기록\n- 보안 로그 기록\n- 관련 시스템 알림

Service --> Controller: UpdatePasswordResponse(success=true)
deactivate Service

Controller -> Controller: 응답 데이터 구성
note right: resultCode: 1000\nmsg: Success\ndata: null

Controller --> Client: HTTP 200 OK\n비밀번호 변경 완료 응답
deactivate Controller

== 에러 처리 ==

alt 파라미터 검증 실패
    Controller -> Controller: 파라미터 검증 실패 처리
    Controller --> Client: HTTP 400\nBad Request
end

alt 비밀번호 정책 위반
    Service -> Service: 비밀번호 정책 검증 실패
    Service --> Controller: ErrorResponse
    Controller --> Client: HTTP 400\n비밀번호 정책 위반
end

alt 데이터베이스 오류
    Service -> Service: 데이터베이스 오류 처리
    Service --> Controller: ErrorResponse
    Controller --> Client: HTTP 500\nInternal Server Error
end

@enduml 